{"pages":[{"title":"About","text":"2018 Fall 分組網誌 課程倉儲: https://github.com/mdecourse/2018fall 課程投影片: https://mdecourse.github.io/2018fall/reveal 課程網誌: https://mdecourse.github.io/2018fall/blog","tags":"misc","url":"./pages/about/"},{"title":"2018 Fall 40623242 CADP WEEK5","text":"2018 Fall 開始將網際內容管理、投影片與網誌進行整合. Onshape week2 簡介\"設計意圖\" (design intent) 設定尺寸 (dimensions) 與約束 (constraints) 自動推理 (automatic inferencing) 繪製精確的零件 (accurate part) 草圖繪製練習 運用與建立平面 (planes) 建立圓角 (fillets) 與倒角 (chamfers) 使用多個 (multiple) 草圖區域 (sketch regions) 基本零件 繪製時鐘模型 - 用於設計意圖教學 各種簡單的幾何形狀 (geometric shapes) onshape補充 Variable = 變數 part = 部分","tags":"Misc","url":"./2018-Fall-Project-Blog-5.html"},{"title":"2018 Fall 40623242 CADP WEEK4","text":"2018 Fall 開始將網際內容管理、投影片與網誌進行整合. 簡單導覽 Onshape 建立 Onshape 帳號 - 請利用學校 gmail 建立教育版帳號 3D 環境導航 (navigate) 說明基於草圖 (sketch-based)的建模 介紹 4 個基本特徵 (features)（擠出(extrude)，旋轉(revolve)，掃描(sweep)，和斷面混成(loaf)） 從 2D 到 3D 介紹基本草圖 鍵盤快捷鍵 (keyboard shotcuts)，滑鼠和觸控平面手勢 (touchpad gestures)，檢視工具 繪圖界面與可視化/檢視的介紹 9.針對既有草圖的模型 - 接續建立特徵 10.存公用模型 (public models) - 並復製到工作區 (workspace) Part studio 單一零件 Lsometric 等角視圖 LEO檔補充 content = 裡面放靜態的HTML reveal = 投影片 pelican = 網誌","tags":"Misc","url":"./2018-Fall-Project-Blog-4.html"},{"title":"2018 Fall 40623242 CADP WEEK2","text":"2018 Fall 開始將網際內容管理、投影片與網誌進行整合. Onshape Q1 : What's Onshape? Ans : 運用雲端系統，整合一個團隊了設計想法，使多人可以編輯的一個共享檔案。 Q1 : Why Onshape? Ans : 透過雲端系統，,使所有共享檔案的人，統一擁有相同版本。 其他補充 8444 = 靜態 8443 = 動態 git checkout = 回歸沒有提交的原始狀態","tags":"Misc","url":"./2018-Fall-Project-Blog-2.html"},{"title":"2018 Fall 40623242 CADP WEEK1","text":"2018 Fall 開始將網際內容管理、投影片與網誌進行整合. Onshape 現在網路上推出很多的3D建模平台或軟體，給需要完成自己設計的人們或團體使用，有建立ID、PCB、建築、機構等，種類還不少，今年看到一套由前Solidworks團隊開發出來的3D建模平台 – Onshape，讓我驚訝的不是它的界面跟Solidworks很像，或是它\"免費\"，而且該有功能它都有，更重要的是它可以把設計的權力下放給每個使用者(開放)，而不只是特定的設計工程師，這對於開發產品的人感受會最深。 基本上，要和相關上下游檢討設計圖，大家都要具備一定的經驗才能溝通，而軟體業早在很久以前就把開發平台下放，使得訓練與失敗的成本相對降低，因此呈現百家爭鳴的態勢。但做機構領域卻相對像是個封閉產業，實體的產品或機構件的發展也就沒那麼好，不過現在因為有了更方便的加工設備與材料，例如3D Printer與雷射切割機，加上網路的特性，使得Onshape可以借此補足產品或機構設計最需要的資源 – 經驗與想法，這也是軟體產業會發展的很好的主要原因。 Onshape憑良心來說，如以3D繪圖軟體的指令數量來說，有點陽春，但其實機構設計會用到的指令，大多是長肉、減肉、旋轉這一類，花的心力大部分在於尺寸的計算需求跟繪製正確的2D圖面供3D使用，這部份是夠用的。 額外補充 把大學比喻為一間餐廳，老師為提供料理的廚師，學生為顧客，付錢吃料理，邊吃邊學。 有網路就只是為了協同;無網路也可單人協同。 Soildworks 1955年發表第一款產品(用PDM協同) 1997被達梭併購 Autodesk 1982年建立 智-有勇無謀 慧-有勇有謀","tags":"Misc","url":"./2018-Fall-Project-Blog-1.html"},{"title":"2018 Fall 分組網誌","text":"2018 Fall 開始將網際內容管理、投影片與網誌進行整合. 課程倉儲 利用 Github 倉儲存放與計算機程式相關的資料, 有幾項好處: 第一, 在不自建網站的情況下, 目前 Github 仍允許免費使用, 管理者除了可以利用網際模式將資料送到對應的 cp github 倉儲 外, 也可以利用近端的 git 客戶端程式, 以分散式版次的流程管理各階段的改版資料. 第二, Github 提供的 Github Pages, 可以讓純 html 加上 Javascript 的網站, 直接在 cp 課程網站 伺服. 第三, 改版後的 CMSimfly, 加上 Pelican 靜態網誌與 Reveal.js 投影片系統, 均為靜態網站資料, 可以直接整合一起, 透過一個網址當作上課參考資料. 該學習哪種程式語言? C/C++、Python、Lua 或 Javascript? 都可以. 在這裡, 學 C/C++ 是為了編寫 Arduino 控制程式, 以及結合 Qt5 建立各種能快速進行工程分析的程式庫, 學習 Python 是為了快速完成 C/C++ 無法迅速完成的分析、模擬與運算, 也能透過 PyQt5 建立視窗程式, 或者呼叫 Flask 建立能在網際環境中執行的協同設計套件. 學習 Lua 是為了能在 V-rep 中使用, 至於 Javascript, 已經無所不在, 尤其在網際成是開發過程, 更是重要, 有其學習的必要性.","tags":"Misc","url":"./2018-Fall-Project-Blog.html"}]}